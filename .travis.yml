language: python

env:
# - OS=centos PY=py2 DB=postgis DJANGO="1.11.26" PYTHON=python
# - OS=centos PY=py2 DB=spatialite DJANGO="1.11.26 PYTHON=python"
- OS=ubuntu PY=py2 DB=postgis DJANGO="1.11.26" PYTHON=python PIP=pip
# - OS=ubuntu PY=py2 DB=spatialite DJANGO="1.11.26" PYTHON=python PIP=pip
- OS=ubuntu PY=py3 DB=postgis DJANGO="1.11.26" PYTHON=python3 PIP=pip3
# - OS=ubuntu PY=py3 DB=spatialite DJANGO="1.11.26" PYTHON=python3 PIP=pip3
- OS=ubuntu PY=py3 DB=postgis DJANGO="2.2.9" PYTHON=python3 PIP=pip3
- OS=ubuntu PY=py3 DB=spatialite DJANGO="2.2.9" PYTHON=python3 PIP=pip3 LATEST=TRUE

services:
- docker

before_install:
- sudo apt-get update
- sudo apt-get install -o Dpkg::Options::="--force-confold" --force-yes -y docker-ce
- docker-compose --version
- sudo rm /usr/local/bin/docker-compose
- curl -L https://github.com/docker/compose/releases/download/1.24.0/docker-compose-`uname -s`-`uname -m` > docker-compose
- chmod +x docker-compose
- sudo mv docker-compose /usr/local/bin
- docker build -t eoxserver --build-arg DJANGO=$DJANGO -f docker/$OS/$PY/Dockerfile .
- if [[ "$LATEST" == "TRUE" ]] ; then docker tag eoxserver eoxa/eoxserver:latest; fi
- if [[ "$LATEST" == "TRUE" && ! -z "$TRAVIS_TAG" ]] ; then docker tag eoxserver eoxa/eoxserver:$TRAVIS_TAG; fi
- if [[ "$LATEST" == "TRUE" && "$TRAVIS_BRANCH" == "master" ]] ; then docker tag eoxserver eoxa/eoxserver:master; fi
- if [[ ! -z "$TRAVIS_TAG" ]] ; then docker tag eoxserver eoxa/eoxserver:$TRAVIS_TAG-$OS-$PY-django$DJANGO; fi

script:
- cd autotest
- echo "DB=${DB}" >> eoxserver.env
- docker-compose config
- docker-compose up -d
- docker-compose ps
- docker-compose exec autotest $PIP install scipy
- docker-compose exec autotest $PYTHON -m eoxserver.services.ows.wps.test_data_types
- docker-compose exec autotest $PYTHON -m eoxserver.services.ows.wps.test_allowed_values
- docker-compose exec autotest $PYTHON manage.py test --pythonpath=../eoxserver/ eoxserver.core -v2
- docker-compose exec autotest $PYTHON manage.py test --pythonpath=../eoxserver/ eoxserver.backends -v2
- docker-compose exec autotest $PYTHON manage.py test --pythonpath=../eoxserver/ eoxserver.services -v2
- docker-compose exec autotest $PYTHON manage.py test --pythonpath=../eoxserver/ eoxserver.resources.coverages -v2
- docker-compose exec autotest $PYTHON manage.py test autotest_services --tag wcs20 -v2
- docker-compose exec autotest $PYTHON manage.py test autotest_services --tag wcs11 -v2
- docker-compose exec autotest $PYTHON manage.py test autotest_services --tag wcs10 -v2
- docker-compose exec autotest $PYTHON manage.py test autotest_services --tag wms -v2
- docker-compose exec autotest $PYTHON manage.py test autotest_services --tag wps -v2
- docker-compose exec autotest $PYTHON manage.py test autotest_services --tag opensearch -v2
- cd ..

after_failure:
- diff autotest/autotest/expected autotest/autotest/responses

notifications:
  slack:
    secure: GPclHjLrLU2BsOS0OOHHm5vQp/GWk2sjCrHpqOVutakGbYMMRao45MHqajim+SypZcva8npIKGAHKTwny3vkvbHUJ7vpjtvRFEISLpvKKQxnq7FXJSc6hkvj+JTAaB+UpOZYyQXtchcLMizD2mST862r8gEKMo7UkbS1VOSjEm0=

before_deploy:
- python setup.py sdist bdist_wheel

deploy:
- provider: releases
  api_key:
    secure: RvD9qeo90sOI+/hQs0V1wMvxfJBBXz4rUXvjcxP65m90koXN+ALV2YRLmlZElca72BsIFfzNcw6nvOr6TGNEMEgWxoJ+e62N4vCz5leQ0guPV76gS4mrxWWRwmXLmEdfp/EPrs84JSU9gAsSSHYrvJJjzfg6VZMQOLNa+vE8dPk=
  file_glob: true
  file: ./dist/*
  skip_cleanup: true
  draft: true
  on:
    repo: EOxServer/eoxserver
    tags: true

- provider: pypi
  user: __token__
  password: $PYPI_TOKEN
  on:
    repo: EOxServer/eoxserver
    tags: true
  skip_existing: true
  distributions: "sdist bdist_wheel"

- provider: script
  script: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin && docker push eoxa/eoxserver
  on:
    tags: true

- provider: script
  script: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin && docker push eoxa/eoxserver:master
  on:
    tags: true
    branch: master

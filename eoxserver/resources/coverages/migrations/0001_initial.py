# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-07-20 14:12
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('backends', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Browse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=1024)),
                ('format', models.CharField(blank=True, max_length=64, null=True)),
                ('style', models.CharField(blank=True, max_length=256, null=True)),
                ('coordinate_reference_system', models.TextField()),
                ('min_x', models.FloatField()),
                ('min_y', models.FloatField()),
                ('max_x', models.FloatField()),
                ('max_y', models.FloatField()),
                ('width', models.PositiveIntegerField()),
                ('height', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='BrowseType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('red_or_grey_expression', models.CharField(max_length=512)),
                ('green_expression', models.CharField(blank=True, max_length=512, null=True)),
                ('blue_expression', models.CharField(blank=True, max_length=512, null=True)),
                ('alpha_expression', models.CharField(blank=True, max_length=512, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CollectionMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CollectionSummaryMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CollectionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CoverageMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CoverageType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='EOObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=256, unique=True)),
                ('begin_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('footprint', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='FieldType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveSmallIntegerField()),
                ('identifier', models.CharField(max_length=512)),
                ('description', models.TextField(blank=True, null=True)),
                ('definition', models.CharField(blank=True, max_length=512, null=True)),
                ('unit_of_measure', models.CharField(max_length=64)),
                ('wavelength', models.FloatField(blank=True, null=True)),
                ('coverage_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='field_types', to='coverages.CoverageType')),
            ],
            options={
                'ordering': ('index',),
            },
        ),
        migrations.CreateModel(
            name='Grid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, null=True, unique=True)),
                ('coordinate_reference_system', models.TextField()),
                ('axis_1_name', models.CharField(max_length=256)),
                ('axis_2_name', models.CharField(blank=True, max_length=256, null=True)),
                ('axis_3_name', models.CharField(blank=True, max_length=256, null=True)),
                ('axis_4_name', models.CharField(blank=True, max_length=256, null=True)),
                ('axis_1_type', models.SmallIntegerField(choices=[(0, b'spatial'), (1, b'elevation'), (2, b'temporal'), (3, b'other')])),
                ('axis_2_type', models.SmallIntegerField(blank=True, choices=[(0, b'spatial'), (1, b'elevation'), (2, b'temporal'), (3, b'other')], null=True)),
                ('axis_3_type', models.SmallIntegerField(blank=True, choices=[(0, b'spatial'), (1, b'elevation'), (2, b'temporal'), (3, b'other')], null=True)),
                ('axis_4_type', models.SmallIntegerField(blank=True, choices=[(0, b'spatial'), (1, b'elevation'), (2, b'temporal'), (3, b'other')], null=True)),
                ('axis_1_offset', models.CharField(max_length=256)),
                ('axis_2_offset', models.CharField(blank=True, max_length=256, null=True)),
                ('axis_3_offset', models.CharField(blank=True, max_length=256, null=True)),
                ('axis_4_offset', models.CharField(blank=True, max_length=256, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=1024)),
                ('format', models.CharField(blank=True, max_length=64, null=True)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaskType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
            ],
        ),
        migrations.CreateModel(
            name='NilValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=512)),
                ('reason', models.CharField(choices=[(b'http://www.opengis.net/def/nil/OGC/0/inapplicable', b'Inapplicable (There is no value)'), (b'http://www.opengis.net/def/nil/OGC/0/missing', b'Missing'), (b'http://www.opengis.net/def/nil/OGC/0/template', b'Template (The value will be available later)'), (b'http://www.opengis.net/def/nil/OGC/0/unknown', b'Unknown'), (b'http://www.opengis.net/def/nil/OGC/0/withheld', b'Withheld (The value is not divulged)'), (b'http://www.opengis.net/def/nil/OGC/0/AboveDetectionRange', b'Above detection range'), (b'http://www.opengis.net/def/nil/OGC/0/BelowDetectionRange', b'Below detection range')], max_length=512)),
                ('field_types', models.ManyToManyField(blank=True, related_name='nil_values', to='coverages.FieldType')),
            ],
        ),
        migrations.CreateModel(
            name='ProductMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, unique=True)),
                ('allowed_coverage_types', models.ManyToManyField(blank=True, to='coverages.CoverageType')),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('eoobject_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='coverages.EOObject')),
            ],
            bases=('coverages.eoobject',),
        ),
        migrations.CreateModel(
            name='Coverage',
            fields=[
                ('eoobject_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='coverages.EOObject')),
                ('axis_1_origin', models.CharField(blank=True, max_length=256, null=True)),
                ('axis_2_origin', models.CharField(blank=True, max_length=256, null=True)),
                ('axis_3_origin', models.CharField(blank=True, max_length=256, null=True)),
                ('axis_4_origin', models.CharField(blank=True, max_length=256, null=True)),
                ('axis_1_size', models.PositiveIntegerField()),
                ('axis_2_size', models.PositiveIntegerField(blank=True, null=True)),
                ('axis_3_size', models.PositiveIntegerField(blank=True, null=True)),
                ('axis_4_size', models.PositiveIntegerField(blank=True, null=True)),
                ('collections', models.ManyToManyField(blank=True, related_name='coverages', to='coverages.Collection')),
                ('coverage_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='coverages.CoverageType')),
                ('grid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='coverages.Grid')),
            ],
            options={
                'abstract': False,
            },
            bases=('coverages.eoobject', models.Model),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('eoobject_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='coverages.EOObject')),
                ('collections', models.ManyToManyField(blank=True, related_name='products', to='coverages.Collection')),
                ('package', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='backends.Storage')),
                ('product_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='coverages.ProductType')),
            ],
            bases=('coverages.eoobject',),
        ),
        migrations.AddField(
            model_name='masktype',
            name='product_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mask_types', to='coverages.ProductType'),
        ),
        migrations.AddField(
            model_name='mask',
            name='mask_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coverages.MaskType'),
        ),
        migrations.AddField(
            model_name='mask',
            name='storage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backends.Storage'),
        ),
        migrations.AddField(
            model_name='collectiontype',
            name='allowed_coverage_types',
            field=models.ManyToManyField(blank=True, to='coverages.CoverageType'),
        ),
        migrations.AddField(
            model_name='collectiontype',
            name='allowed_product_types',
            field=models.ManyToManyField(blank=True, to='coverages.ProductType'),
        ),
        migrations.AddField(
            model_name='browsetype',
            name='product_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coverages.ProductType'),
        ),
        migrations.AddField(
            model_name='browse',
            name='browse_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coverages.BrowseType'),
        ),
        migrations.AddField(
            model_name='browse',
            name='storage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backends.Storage'),
        ),
        migrations.AddField(
            model_name='productmetadata',
            name='product',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='product_metadata', to='coverages.Product'),
        ),
        migrations.AddField(
            model_name='mask',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='masks', to='coverages.Product'),
        ),
        migrations.AlterUniqueTogether(
            name='fieldtype',
            unique_together=set([('identifier', 'coverage_type'), ('index', 'coverage_type')]),
        ),
        migrations.AddField(
            model_name='coveragemetadata',
            name='coverage',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='coverage_metadata', to='coverages.Coverage'),
        ),
        migrations.AddField(
            model_name='coverage',
            name='parent_product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coverages', to='coverages.Product'),
        ),
        migrations.AddField(
            model_name='collectionsummarymetadata',
            name='collection',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='summary_metadata', to='coverages.Collection'),
        ),
        migrations.AddField(
            model_name='collectionmetadata',
            name='collection',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='collection_metadata', to='coverages.Collection'),
        ),
        migrations.AddField(
            model_name='collection',
            name='collection_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='coverages.CollectionType'),
        ),
        migrations.AddField(
            model_name='collection',
            name='grid',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='coverages.Grid'),
        ),
        migrations.AddField(
            model_name='browse',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='browses', to='coverages.Product'),
        ),
        migrations.AlterUniqueTogether(
            name='browse',
            unique_together=set([('product', 'browse_type', 'style')]),
        ),
    ]

# Generated by Django 3.2.18 on 2023-09-08 17:26

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    dependencies = [
        ('coverages', '0012_out_of_bounds_data_flag'),
    ]

    operations = [
        migrations.CreateModel(
            name='RasterStyle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True)),
                ('type', models.CharField(choices=[('ramp', 'ramp'), ('values', 'values'), ('intervals', 'intervals')], max_length=16)),
                ('title', models.TextField(blank=True, null=True)),
                ('abstract', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RasterStyleToBrowseTypeThrough',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('style_name', models.CharField(blank=True, max_length=256, null=True)),
                ('browse_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coverages.browsetype')),
                ('raster_style', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coverages.rasterstyle')),
            ],
            options={
                'unique_together': {('raster_style', 'browse_type', 'style_name')},
            },
        ),
        migrations.AddField(
            model_name='rasterstyle',
            name='browse_types',
            field=models.ManyToManyField(related_name='raster_styles', through='coverages.RasterStyleToBrowseTypeThrough', to='coverages.BrowseType'),
        ),
        migrations.CreateModel(
            name='RasterStyleColorEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('color', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(re.compile('^#?((?:[0-F]{3}){1,2})$', 2))])),
                ('opacity', models.FloatField(default=1.0)),
                ('label', models.CharField(blank=True, max_length=256, null=True)),
                ('raster_style', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='color_entries', to='coverages.rasterstyle')),
            ],
            options={
                'unique_together': {('raster_style', 'value')},
            },
        ),
    ]

# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "centos-6.7-x86_64"

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  config.vm.box_url = "http://downloads.eox.at/boxes/centos-6.7-x86_64.box"

  config.vm.hostname = "eoxserver-vagrant"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network :forwarded_port, guest: 80, host: 8080
  config.vm.network :forwarded_port, guest: 80, host: 8000
  config.vm.network :forwarded_port, guest: 8000, host: 8001

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder  "./shares/httpd_conf.d", "/etc/httpd/conf.d", owner: "root", group: "root"
  config.vm.synced_folder  "..", "/var/eoxserver"

  # Shell provisioning
  config.vm.provision "shell", path: "scripts/selinux.sh"
  config.vm.provision "shell", path: "scripts/repositories.sh"
  config.vm.provision "shell", path: "scripts/packages.sh"
  config.vm.provision "shell", path: "scripts/postgres.sh"
  config.vm.provision "shell", path: "scripts/development_installation.sh"
  config.vm.provision "shell", path: "scripts/httpd.sh"
  config.vm.provision "shell", path: "scripts/user_custom.sh"

  # Use package caching https://github.com/fgrehm/vagrant-cachier
  config.cache.auto_detect = true

  # Adjust Virtualbox configuration
  config.vm.provider "virtualbox" do |v|

    # Custom name
    v.name = "eoxserver"

    # Increase memory and cpus
    v.customize ["modifyvm", :id, "--memory", 1024, "--cpus", 2]
    # Increase performance i.e. don't use swap extensively
    v.customize ["modifyvm", :id, "--ioapic", "on", "--largepages", "off", "--vtxvpid", "off"]

    # Use GUI for debugging purposes
    #v.gui = true
  end
end
